plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'homer'
version '1.0-SNAPSHOT'

mainClassName = 'homer.vkusmir.Application'

//configurations.implementation.setCanBeResolved(true)

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.2'
}

sourceCompatibility = '19'
targetCompatibility = '19'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'homer.vkusmir'
    mainClass = 'homer.vkusmir.Application'
}

javafx {
    version = '19.0.2.1'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

dependencies {
    implementation 'org.openjfx:javafx-base:19.0.2.1'
    implementation 'org.openjfx:javafx-controls:19.0.2.1'
    implementation 'org.openjfx:javafx-graphics:19.0.2.1'
    implementation 'org.openjfx:javafx:19.0.2.1'
    implementation 'org.openjfx:javafx-fxml:19.0.2.1'
    implementation 'org.openjfx:javafx-swing:19.0.2.1'
    implementation 'org.openjfx:javafx-media:19.0.2.1'
    implementation 'org.openjfx:javafx-web:19.0.2.1'
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}


jlinkZip {
    group = 'distribution'
}

task copyAllDependencies(type: Copy) {
    from configurations.compileClasspath
    into "${buildDir}/output/libs"
}
build.dependsOn(copyAllDependencies)

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': 'homer.vkusmir.Application',
                "Class-Path": '.'
        )
    }

//    from {
//        configurations.implementation.collect {
//            it.isDirectory() ? it : zipTree(it)
//        }
//    }
}
